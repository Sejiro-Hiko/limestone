syntax = "proto3";

import "proto/user.proto";
import "google/protobuf/empty.proto";

package limestone;

option go_package = "github.com/mnadev/limestone/userservice/proto";

service UserService {
    // Creates the given User with the given password.
    rpc CreateUser(CreateUserRequest) returns (User) {}
    // Gets a User from the database provided the password is valid.
    rpc GetUser(GetUserRequest) returns (User) {}
    // Updates a User to the given User in the request provided the password is valid.
    rpc UpdateUser(UpdateUserRequest) returns (User) {}
    // Deletes a User from the database provided the password is valid.
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
}

message CreateUserRequest {
    // The user to create.
    User user = 1;

    // The password for the user. This password is hashed before being
    // stored in the database. 
    // The password must be at least 8 characters.
    string password = 2;
}

message GetUserRequest {
    oneof id {
        // The unique email associated with the user.
        string email = 1;
        // The unique username associated with the user.
        string username = 2;
    }

    // The password for the user account.
    string password = 3;
}

message UpdateUserRequest {
    // The updated user proto.
    User user = 1;

    // The password for the user account.
    string password = 2;
}

message DeleteUserRequest {
    oneof id {
        // The unique email associated with the user.
        string email = 1;
        // The unique username associated with the user.
        string username = 2;
    }

    // The password for the user account.
    string password = 3;
}

// Empty response returned for DeleteUser RPC.
message DeleteUserResponse {}
